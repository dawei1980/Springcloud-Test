server:
  port: 8084

spring:
  profiles:
    active: path-route      #配置文件名 和 spring.profiles.active 相对应
  application:
    name: springcloud-gateway
  main:
    allow-bean-definition-overriding: true

  cloud:
    config:
      uri: http://localhost:8082 #config server 端地址
      label: master #git分支
      profile: dev
      discovery:
        enabled: true
        service-id: springcloud-config #config-server服务名称
    bus:
      trace:
        enabled: true
      enabled: true

    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true # 服务名小写

      # 默认过滤器，对所有路由生效
      default-filters:
        # 响应头过滤器，对输出的响应设置其头部属性名称为X-Response-Default-MyName，值为xm；如果有多个参数多则重写一行设置不同的参数
        - AddResponseHeader=X-Response-Default-MyName, xm

      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id: springcloud-login
          uri: lb://springcloud-login   #代表从注册中心获取服务，且以lb(load-balance)负载均衡方式转发
          predicates:                     #断言
          - Path= /logintest/** #拦截的路径
          filters:
            - MyParam=name # 配置后就可以获取请求中key为name的值
#            - name: RequestRateLimiter
#              args: #限流配置
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
#                key-resolver: "#{@ipKeyResolver}"

        - id: springcloud-management
          uri: lb://springcloud-management   #代表从注册中心获取服务，且以lb(load-balance)负载均衡方式转发
          predicates:                     #断言
            - Path= /management/** #拦截的路径
          filters:
            - MyParam=name # 配置后就可以获取请求中key为name的值
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
#                key-resolver: "#{@ipKeyResolver}"

eureka:
  client:
    service-url:
      #defaultZone 这个是不会提示的，此处需要自己写
      #实际上属性应该是service-url,这个属性是个map（key-value）格式；当key是defaultZone的时候才能被解析；所以这里没有提示，
      #但是自己还需要写一个defaultZone；
      defaultZone: http://localhost:8761/eureka/eureka


# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 50000





